#Makefile for fsim_sl1

#Common definition
TARGET = libffe.a
BUILD_ROOT=../..
VPATH=../..
CMODEL_PATH=$(BUILD_ROOT)/../Cmodel/ffe
INSTALL_DIR=$(BUILD_ROOT)/lib

-include $(BUILD_ROOT)/Makefile.gsetup

#Append include directories
INC_DIRS += \
-I$(CMODEL_PATH)/

#Append compilation flags
#CFLAGS += -DIs_True_On=1 -static -D_RAREG_TO_31=1
CFLAGS += -lm -DIs_True_On=1 -static -DCOMPILE_FSIM

#Append extra compilation flags
EXTRA_CFLAGS +=

#Append linker flags
LD_FLAGS += 

#Append library searching path
LIB_DIRS += 

#Source files
#Source files shared by all architecture
FFE_SOURCE = \
$(CMODEL_PATH)/ffe_fsim.c \
$(CMODEL_PATH)/viterbistage.c \
$(CMODEL_PATH)/traceback.c


ALL_SOURCE := $(FFE_SOURCE)

#object files. Object files are placed in current directory
OBJS=$(patsubst %.c, %.o, $(notdir $(ALL_SOURCE)))

#Target
all: $(TARGET)

$(TARGET): $(OBJS)
	$(AR) cru $@ $^

#Compilation  and dependency generation rules
$(OBJS): __SRC = $(filter %/$(patsubst %.o,%.c,$@),$(ALL_SOURCE))
$(OBJS): __DEP =$(patsubst %.o,%.d, $@)
$(OBJS): 
	echo INC_DIRS:$(INC_DIRS)
	@echo Building $@ from $(__SRC) by $(__DEP)
	$(CC)  $(CFLAGS) $(EXTRA_CFLAGS) $(INC_DIRS) $(__SRC)
	@echo Creating dependency file $(__DEP) for $@
	@$(GEN_DEP)  $(CFLAGS) $(EXTRA_CFLAGS) $(INC_DIRS)  $(__SRC) > $(__DEP)

#Autogenerated dependencies. Dependency files are placed in current directory too
DEPFILES_ALL=$(patsubst %.o,%.d,$(OBJS))
-include $(DEPFILES_ALL)

clean:
	rm -Rf *.o *.d $(TARGET) 
	
install:
	cp -f $(TARGET) $(INSTALL_DIR)
