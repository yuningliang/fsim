#####################################################################
#                                    Makefile for psim_sl1
#####################################################################

#Common definition
TARGET = psim_sl1
BUILD_ROOT=../..
VPATH=$(BUILD_ROOT):$(BUILD_ROOT)/psim

-include $(BUILD_ROOT)/Makefile.gsetup

#Append include directories
INC_DIRS += \
-I$(BUILD_ROOT)/include \
-I$(BUILD_ROOT)/utils/include \
-I$(BUILD_ROOT)/psim_sl1/include \
-I$(BUILD_ROOT)/simkernel/include \
-I$(BUILD_ROOT)/com/include \
-I$(BUILD_ROOT)/sl1/include \

#Append compilation flags
CFLAGS += -DIs_True_On=1 -static #-DNO_ACC_CROSS #-DMULTI_THREAD -DSOURCE_DEBUG

#Append extra compilation flags
EXTRA_CFLAGS += 

#Append linker flags
LD_FLAGS += -lrt -lffe

#Append library searching path
LIB_DIRS += -L$(BUILD_ROOT)/lib/

#Source files
#Source files shared by all architecture
SL1_SOURCE = \

PSIM_SOURCE = \
psim_sl1/PerfGlobalOpt.cpp \
psim_sl1/PerfMain_SL1.cpp \
psim_sl1/SL_getopt.cpp \
psim_sl1/SL_options.cpp \
psim_sl1/PerfFetch.cpp \
psim_sl1/PerfTraceFile.cpp \
psim_sl1/PerfExec.cpp \
psim_sl1/PerfDispatch.cpp \
psim_sl1/PerfInstrItem.cpp \
psim_sl1/PerfIWin.cpp \
psim_sl1/PerfModel_SL1.cpp \
psim_sl1/PerfRegDep_SL1.cpp \
psim_sl1/PerfCache.cpp \
utils/messg.cpp \

FSIM_SL1_SOURCE = \
sl1/sl1decoder.cpp \
sl1/sl1instrtable.cpp \
sl1/sl1exec.cpp \
sl1/sl1disasm.cpp \
com/cmmu.cpp \
sl1/sl1mmu.cpp \
sl1/sl1reg.cpp \
sl1/sl1ffe.cpp \
sl1/sl1viterbi.cpp \
sl1/sl1traceback.cpp \
sl1/sl1instr.cpp \
simkernel/memory.cpp \
simkernel/symtable.cpp \
simkernel/gui.cpp \
simkernel/accesslist.cpp \
utils/elf_reader.cpp

ALL_SOURCE := $(PSIM_SOURCE) $(FSIM_SL1_SOURCE)

#object files. Object files are placed in current directory
OBJS=$(patsubst %.cpp, %.o, $(notdir $(ALL_SOURCE)))

#Target
all: $(TARGET)
	 
$(TARGET): $(OBJS)
	$(LINK)   $(LIB_DIRS) -o $(TARGET) $^ $(LD_FLAGS)

#Compilation  and dependency generation rules
$(OBJS): __SRC = $(filter %/$(patsubst %.o,%.cpp,$@),$(ALL_SOURCE))
$(OBJS): __DEP =$(patsubst %.o,%.d, $@)
$(OBJS):
#	echo INC_DIRS:$(INC_DIRS)
#	@echo Building $@ from $(__SRC) by $(__DEP)
	$(CPP)  $(CFLAGS) $(EXTRA_CFLAGS) $(INC_DIRS) $(BUILD_ROOT)/$(__SRC)
#	@echo Creating dependency file $(__DEP) for $@
	$(GEN_DEP)  $(CFLAGS) $(EXTRA_CFLAGS) $(INC_DIRS)  $(BUILD_ROOT)/$(__SRC) > $(__DEP)

#Autogenerated dependencies. Dependency files are placed in current directory too
DEPFILES_ALL=$(patsubst %.o,%.d,$(OBJS))
-include $(DEPFILES_ALL)

clean:
	rm -Rf *.o *.d $(TARGET)
	
install:
	cp -f $(TARGET) $(INSTALL_DIR)

